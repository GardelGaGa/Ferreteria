/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.ProveedorController;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Proveedor;
import modelo.ProveedorDAO;

/**
 *
 * @author alary
 */
public class ProveedoresPanel extends javax.swing.JPanel {

    private Connection conexion;
    private ProveedorController proveedorController;

    /**
     * Creates new form ProveedoresPanel
     */
    public ProveedoresPanel(Connection conexion) {
        this.proveedorController = new ProveedorController(conexion);
        this.conexion = conexion;
        initComponents();
        inicializarTablaProveedores();
        cargarDatosProveedores();
    }

    private void cargarDatosProveedores() {
        List<Proveedor> proveedores = proveedorController.obtenerTodosProveedores();
        DefaultTableModel model = (DefaultTableModel) TablaProveedores.getModel();
        model.setRowCount(0); // Limpiar la tabla antes de cargar los datos
        for (Proveedor proveedor : proveedores) {
            model.addRow(new Object[]{
                proveedor.getIdProveedor(),
                proveedor.getNombreEmpresa(),
                proveedor.getRfc(),
                proveedor.getDireccion(),
                proveedor.getTelefono(),
                proveedor.getCorreoElectronico()
            });
        }
    }

    private void inicializarTablaProveedores() {
        DefaultTableModel model = (DefaultTableModel) TablaProveedores.getModel();
        model.setColumnIdentifiers(new Object[]{"ID", "Nombre", "RFC", "Dirección", "Teléfono", "Correo Electrónico"});
        TablaProveedores.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblRFC = new javax.swing.JLabel();
        txtRFC = new javax.swing.JTextField();
        lblTelefono = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        lblCorreoElectronico = new javax.swing.JLabel();
        txtCorreoElectronico = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaProveedores = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 102, 102));
        setPreferredSize(new java.awt.Dimension(940, 550));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNombre.setText("Nombre");
        jPanel1.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 29, 93, -1));
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 48, 148, -1));

        lblRFC.setText("RFC");
        jPanel1.add(lblRFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 85, -1, -1));
        jPanel1.add(txtRFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 104, 148, -1));

        lblTelefono.setText("Telefono");
        jPanel1.add(lblTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 141, -1, -1));

        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 148, -1));

        lblDireccion.setText("Direccion");
        jPanel1.add(lblDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 197, -1, -1));
        jPanel1.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 216, 148, -1));

        lblCorreoElectronico.setText("Correo Electronico");
        jPanel1.add(lblCorreoElectronico, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 253, -1, -1));
        jPanel1.add(txtCorreoElectronico, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 272, 148, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 88, 180, 340));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TablaProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaProveedoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaProveedores);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 700, 320));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(208, 88, 720, 340));

        btnGuardar.setBackground(new java.awt.Color(153, 255, 153));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/disquete.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 460, 110, 50));

        btnNuevo.setBackground(new java.awt.Color(153, 204, 255));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/agregar.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 460, 110, 50));

        btnEliminar.setBackground(new java.awt.Color(255, 153, 153));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 460, -1, 50));

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnActualizar.setText("Editar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 460, 100, 50));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Proveedores");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(497, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 920, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        limpiarCamposProveedores();
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void TablaProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaProveedoresMouseClicked
        // TODO add your handling code here:
        int filaSeleccionada = TablaProveedores.getSelectedRow();

        if (filaSeleccionada >= 0) {
            DefaultTableModel model = (DefaultTableModel) TablaProveedores.getModel();

            // Obtener los datos del producto seleccionado en la tabla
            Object nombreEmpresaObj = model.getValueAt(filaSeleccionada, 1);
            String nombreEmpresa = nombreEmpresaObj != null ? nombreEmpresaObj.toString() : "";

            Object rfcObj = model.getValueAt(filaSeleccionada, 2);
            String rfc = rfcObj != null ? rfcObj.toString() : "";

            Object direccionObj = model.getValueAt(filaSeleccionada, 3);
            String direccion = direccionObj != null ? direccionObj.toString() : "";

            Object telefonoObj = model.getValueAt(filaSeleccionada, 4);
            String telefono = telefonoObj != null ? telefonoObj.toString() : "";

            Object correoElectronicoObj = model.getValueAt(filaSeleccionada, 5);
            String correoElectronico = correoElectronicoObj != null ? correoElectronicoObj.toString() : "";

            // Llenar los campos de texto con los datos obtenidos
            txtNombre.setText(nombreEmpresa);
            txtRFC.setText(rfc);
            txtDireccion.setText(telefono);
            txtTelefono.setText(direccion);
            txtCorreoElectronico.setText(correoElectronico);
        }


    }//GEN-LAST:event_TablaProveedoresMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        try {
            // Obtener datos del formulario
            String nombreEmpresa = txtNombre.getText();
            String rfc = txtRFC.getText();
            String direccion = txtDireccion.getText();
            String telefono = txtTelefono.getText();
            String correoElectronico = txtCorreoElectronico.getText();

            // Crear un nuevo producto
            Proveedor nuevoProveedor = new Proveedor(0, nombreEmpresa, rfc, direccion, telefono, correoElectronico);

            // Guardar el producto en la base de datos
            proveedorController.agregarProveedor(nuevoProveedor);

            // Actualizar la tabla de productos
            actualizarTablaProveedores();

            // Limpiar los campos del formulario
            limpiarCamposProveedores();

            JOptionPane.showMessageDialog(this, "Proveedor guardado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error en el formato de los datos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al guardar el proveedor: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        try {
            // Obtener el ID del producto seleccionado
            int idProveedor = obtenerIdSeleccionado();

            // Eliminar el producto de la base de datos
            proveedorController.eliminarProveedor(idProveedor);

            // Actualizar la tabla de productos
            actualizarTablaProveedores();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al eliminar el producto: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        limpiarCamposProveedores();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        try {
            DefaultTableModel model = (DefaultTableModel) TablaProveedores.getModel();
            int filaSeleccionada = TablaProveedores.getSelectedRow();

            if (filaSeleccionada >= 0) {
                int idProveedor = (int) model.getValueAt(filaSeleccionada, 0);
                String nombreEmpresa = txtNombre.getText();
                String rfc = txtRFC.getText();
                String direccion = txtDireccion.getText();
                String telefono = txtTelefono.getText();
                String correoElectronico = txtCorreoElectronico.getText();

                // Crear un nuevo objeto Producto con los datos actualizados
                Proveedor proveedorActualizado = new Proveedor(idProveedor, nombreEmpresa, rfc, direccion, telefono, correoElectronico);

                // Actualizar el producto en la base de datos
                proveedorController.actualizarProveedor(proveedorActualizado);

                // Actualizar la tabla de productos
                actualizarTablaProveedores();

                // Limpiar los campos del formulario
                limpiarCamposProveedores();
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione un proveedor para actualizar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Error en el formato de los datos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al actualizar el proveedor: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaProveedores;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCorreoElectronico;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblRFC;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JTextField txtCorreoElectronico;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtRFC;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
private int obtenerIdSeleccionado() {
        // Obtiene el modelo de la tabla de productos
        DefaultTableModel model = (DefaultTableModel) TablaProveedores.getModel();

        // Obtiene el índice de la fila seleccionada
        int selectedRowIndex = TablaProveedores.getSelectedRow();

        // Verifica si se ha seleccionado una fila válida
        if (selectedRowIndex >= 0) {
            // Obtiene el ID del producto de la fila seleccionada
            return (int) model.getValueAt(selectedRowIndex, 0); // Considerando que el ID del producto está en la columna 0
        }
        // Si no se ha seleccionado ninguna fila, devuelve -1
        return -1;
    }

    private void actualizarTablaProveedores() {
        List<Proveedor> proveedores = proveedorController.obtenerTodosProveedores();
        if (proveedores != null) {
            DefaultTableModel model = (DefaultTableModel) TablaProveedores.getModel();
            model.setRowCount(0);

            for (Proveedor proveedor : proveedores) {
                model.addRow(new Object[]{
                    proveedor.getIdProveedor(),
                    proveedor.getNombreEmpresa(),
                    proveedor.getRfc(),
                    proveedor.getDireccion(),
                    proveedor.getTelefono(),
                    proveedor.getCorreoElectronico()
                });
            }
        }

    }

    private void limpiarCamposProveedores() {
        txtNombre.setText("");
        txtRFC.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtCorreoElectronico.setText("");
    }
}
