/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import javax.swing.SwingUtilities; // Importación única necesaria
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.SQLException;
import modelo.Usuario;
import controlador.UsuarioController;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.sql.PreparedStatement;

/**
 *
 * @author alary
 */
public class UsuariosPanel extends javax.swing.JPanel {

    private UsuarioController usuarioController;
    private Connection conexion;

    /**
     * Creates new form UsuariosPanel
     */
    public UsuariosPanel(Connection conexion) {
        this.conexion = conexion;
        initComponents();
        initializeDatabaseConnection();
        cargarUsuariosEnTabla();
        configurarModeloTabla();
    }

    private void initializeDatabaseConnection() {
        try {
            conexion = DriverManager.getConnection("jdbc:mysql://localhost:3306/ferreteria", "root", "RobinPanzon1");
            usuarioController = new UsuarioController(conexion);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al conectar con la base de datos: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // Agregar traza de la excepción para depuración
        }
    }

    private void configurarModeloTabla() {
        DefaultTableModel model = (DefaultTableModel) TablaUsuarios.getModel();
        model.setColumnIdentifiers(new String[]{"ID", "Nombre", "Apellido", "Cargo", "NombreUsuario", "Contraseña", "Correo Electrónico", "Teléfono", "Fecha Contratación", "Salario"});
        actualizarTablaUsuarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNombreUsuario = new javax.swing.JLabel();
        txtNombreUsuario = new javax.swing.JTextField();
        lblContraseña = new javax.swing.JLabel();
        txtContraseña = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblApellido = new javax.swing.JLabel();
        txtApellido = new javax.swing.JTextField();
        lblCargo = new javax.swing.JLabel();
        cbCargo = new javax.swing.JComboBox<>();
        lblFechaContratacion = new javax.swing.JLabel();
        txtFechaContratacion = new javax.swing.JTextField();
        lblSalario = new javax.swing.JLabel();
        txtSalario = new javax.swing.JTextField();
        lblCorreoElectronico = new javax.swing.JLabel();
        txtCorreoElectronico = new javax.swing.JTextField();
        lblTelefono = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();
        btnSelecFecha = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaUsuarios = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 102, 102));
        setPreferredSize(new java.awt.Dimension(940, 550));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNombreUsuario.setText("Nombre de usuario");
        jPanel1.add(lblNombreUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));
        jPanel1.add(txtNombreUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 29, 160, -1));

        lblContraseña.setText("Contraseña");
        jPanel1.add(lblContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 54, -1, -1));
        jPanel1.add(txtContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 73, 160, -1));

        lblNombre.setText("Nombre");
        jPanel1.add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, -1, 20));

        txtNombre.setMinimumSize(new java.awt.Dimension(9, 19));
        txtNombre.setPreferredSize(new java.awt.Dimension(9, 19));
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 150, 30));

        lblApellido.setText("Apellido");
        jPanel1.add(lblApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, -1, 20));
        jPanel1.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 150, 30));

        lblCargo.setText("Cargo");
        jPanel1.add(lblCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 102, -1, -1));

        cbCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Empleado", "Administrador" }));
        cbCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCargoActionPerformed(evt);
            }
        });
        jPanel1.add(cbCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 160, -1));

        lblFechaContratacion.setText("Fecha de contratacion");
        jPanel1.add(lblFechaContratacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, -1, -1));
        jPanel1.add(txtFechaContratacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, 133, 30));

        lblSalario.setText("Salario");
        jPanel1.add(lblSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        txtSalario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalarioActionPerformed(evt);
            }
        });
        jPanel1.add(txtSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 160, -1));

        lblCorreoElectronico.setText("Correo electronico");
        jPanel1.add(lblCorreoElectronico, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 150, 98, -1));
        jPanel1.add(txtCorreoElectronico, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, 200, 30));

        lblTelefono.setText("Telefono");
        jPanel1.add(lblTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, 20));

        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 150, 30));

        btnGuardar.setBackground(new java.awt.Color(125, 255, 125));
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/disquete.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, 130, 70));

        btnEliminar.setBackground(new java.awt.Color(255, 170, 170));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 140, 120, 50));

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        btnActualizar.setText("Editar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 80, 120, 50));

        btnNuevo.setBackground(new java.awt.Color(204, 255, 255));
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/agregar.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 120, 50));

        btnSelecFecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fecha-del-calendario.png"))); // NOI18N
        btnSelecFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecFechaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSelecFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 30, 20, 20));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/usuarioPanel.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, 130, 150));

        jPanel2.setBackground(new java.awt.Color(255, 255, 0));

        TablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaUsuarios);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(204, 204, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Control de usuarios");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 920, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtSalarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalarioActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        try {
            java.util.Date fechaUtil = parseFecha(txtFechaContratacion.getText());
            java.sql.Date fechaContratacion = new java.sql.Date(fechaUtil.getTime());

            String nombreUsuario = txtNombreUsuario.getText();
            String nombre = txtNombre.getText();
            String apellido = txtApellido.getText();
            String cargo = cbCargo.getSelectedItem().toString();
            String contraseña = txtContraseña.getText();
            String correoElectronico = txtCorreoElectronico.getText();
            String telefono = txtTelefono.getText();
            double salario = Double.parseDouble(txtSalario.getText());

            Usuario nuevoUsuario = new Usuario(0, nombre, apellido, cargo, nombreUsuario, contraseña, correoElectronico, telefono, fechaContratacion, salario);

            usuarioController.insertarUsuario(nuevoUsuario);
            actualizarTablaUsuarios();
        } catch (Exception ex) {
            ex.printStackTrace(); // Agregar traza de la excepción para depuración
            JOptionPane.showMessageDialog(this, "Error al guardar el usuario: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        limpiarCamposUsuarios();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void cbCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCargoActionPerformed

    private void btnSelecFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecFechaActionPerformed
        // TODO add your handling code here:
        java.awt.Window parentWindow = SwingUtilities.getWindowAncestor(this);
        if (parentWindow instanceof javax.swing.JFrame) {
            SeleccionarFecha Calendario = new SeleccionarFecha((javax.swing.JFrame) parentWindow, true, txtFechaContratacion);
            Calendario.setVisible(true);
        }
    }//GEN-LAST:event_btnSelecFechaActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        limpiarCamposUsuarios();
        java.util.Date fechaActual = new java.util.Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String fechaFormateada = dateFormat.format(fechaActual);

        // Establecer la fecha actual en el campo de texto de fecha de contratación
        txtFechaContratacion.setText(fechaFormateada);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:

        try {
            DefaultTableModel model = (DefaultTableModel) TablaUsuarios.getModel();
            int selectedRowIndex = TablaUsuarios.getSelectedRow();

            if (selectedRowIndex >= 0) {
                // Obtener los datos modificados desde los campos de texto
                int idUsuario = (int) model.getValueAt(selectedRowIndex, 0);
                String nombre = txtNombre.getText();
                String apellido = txtApellido.getText();
                String cargo = (String) cbCargo.getSelectedItem();
                String nombreUsuario = txtNombreUsuario.getText();
                String contraseña = txtContraseña.getText();
                String correoElectronico = txtCorreoElectronico.getText();
                String telefono = txtTelefono.getText();
                java.util.Date fechaContratacionUtil = new SimpleDateFormat("yyyy-MM-dd").parse(txtFechaContratacion.getText());
                double salario = Double.parseDouble(txtSalario.getText());

                // Convertir java.util.Date a java.sql.Date
                java.sql.Date fechaContratacionSql = new java.sql.Date(fechaContratacionUtil.getTime());

                // Crear la conexión a la base de datos
                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/ferreteria", "root", "RobinPanzon1");
                String sql = "UPDATE usuarios SET nombre = ?, apellido = ?, cargo = ?, nombreUsuario = ?, contraseña = ?, correoElectronico = ?, telefono = ?, fechaContratacion = ?, salario = ? WHERE idUsuario = ?";
                PreparedStatement stmt = conn.prepareStatement(sql);

                // Asignar los valores a la consulta
                stmt.setString(1, nombre);
                stmt.setString(2, apellido);
                stmt.setString(3, cargo);
                stmt.setString(4, nombreUsuario);
                stmt.setString(5, contraseña);
                stmt.setString(6, correoElectronico);
                stmt.setString(7, telefono);
                stmt.setDate(8, fechaContratacionSql);
                stmt.setDouble(9, salario);
                stmt.setInt(10, idUsuario);

                // Ejecutar la actualización
                int rowsUpdated = stmt.executeUpdate();
                if (rowsUpdated > 0) {
                    JOptionPane.showMessageDialog(this, "Actualización exitosa!");

                    // Actualizar la tabla
                    model.setValueAt(nombre, selectedRowIndex, 1);
                    model.setValueAt(apellido, selectedRowIndex, 2);
                    model.setValueAt(cargo, selectedRowIndex, 3);
                    model.setValueAt(nombreUsuario, selectedRowIndex, 4);
                    model.setValueAt(contraseña, selectedRowIndex, 5);
                    model.setValueAt(correoElectronico, selectedRowIndex, 6);
                    model.setValueAt(telefono, selectedRowIndex, 7);
                    model.setValueAt(fechaContratacionSql, selectedRowIndex, 8);
                    model.setValueAt(salario, selectedRowIndex, 9);
                }
                conn.close();
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al actualizar los datos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        actualizarTablaUsuarios();
        limpiarCamposUsuarios();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int idUsuario = obtenerIdSeleccionado();

        // Llamar al método para eliminar el usuario
        usuarioController.eliminarUsuario(idUsuario);

        // Actualizar la tabla mostrando los usuarios
        actualizarTablaUsuarios();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void TablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaUsuariosMouseClicked
        // TODO add your handling code here:                                        
        // Obtiene el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) TablaUsuarios.getModel();

        // Obtiene el índice de la fila seleccionada
        int selectedRowIndex = TablaUsuarios.getSelectedRow();

        // Verifica si se ha seleccionado una fila válida
        if (selectedRowIndex >= 0) {
            // Obtiene los datos de la fila seleccionada
            int idUsuario = (int) model.getValueAt(selectedRowIndex, 0);
            String nombre = (String) model.getValueAt(selectedRowIndex, 1);
            String apellido = (String) model.getValueAt(selectedRowIndex, 2);
            String cargo = (String) model.getValueAt(selectedRowIndex, 3);
            String nombreUsuario = (String) model.getValueAt(selectedRowIndex, 4);
            String contraseña = (String) model.getValueAt(selectedRowIndex, 5);
            String correoElectronico = (String) model.getValueAt(selectedRowIndex, 6);
            String telefono = (String) model.getValueAt(selectedRowIndex, 7);
            java.sql.Date fechaContratacionSql = (java.sql.Date) model.getValueAt(selectedRowIndex, 8);
            double salario = (double) model.getValueAt(selectedRowIndex, 9);

            // Convertir java.sql.Date a java.util.Date
            java.util.Date fechaContratacionUtil = new java.util.Date(fechaContratacionSql.getTime());

            // Muestra los datos en los campos de texto del panel
            txtNombreUsuario.setText(nombreUsuario);
            txtNombre.setText(nombre);
            txtApellido.setText(apellido);
            cbCargo.setSelectedItem(cargo);
            txtContraseña.setText(contraseña);
            txtCorreoElectronico.setText(correoElectronico);
            txtTelefono.setText(telefono);
            txtSalario.setText(String.valueOf(salario));

            // Formatear la fecha y mostrarla en el campo de texto
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String fechaFormateada = dateFormat.format(fechaContratacionUtil);
            txtFechaContratacion.setText(fechaFormateada);

            // Otras acciones relacionadas con la selección, si es necesario
        }
    }//GEN-LAST:event_TablaUsuariosMouseClicked

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        // TODO add your handling code here:
        if (txtTelefono.getText().length() >= 10) {
            evt.consume();
        }
    }//GEN-LAST:event_txtTelefonoKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaUsuarios;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnSelecFecha;
    private javax.swing.JComboBox<String> cbCargo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblContraseña;
    private javax.swing.JLabel lblCorreoElectronico;
    private javax.swing.JLabel lblFechaContratacion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNombreUsuario;
    private javax.swing.JLabel lblSalario;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtContraseña;
    private javax.swing.JTextField txtCorreoElectronico;
    private javax.swing.JTextField txtFechaContratacion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JTextField txtSalario;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables

    private int obtenerIdSeleccionado() {
        // Obtiene el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) TablaUsuarios.getModel();

        // Obtiene el índice de la fila seleccionada
        int selectedRowIndex = TablaUsuarios.getSelectedRow();

        // Verifica si se ha seleccionado una fila válida
        if (selectedRowIndex >= 0) {
            // Obtiene el ID de usuario de la fila seleccionada
            return (int) model.getValueAt(selectedRowIndex, 0);
        }
        // Si no se ha seleccionado ninguna fila, devuelve -1
        return -1;
    }

    private java.util.Date parseFecha(String fecha) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        try {
            return dateFormat.parse(fecha);
        } catch (ParseException e) {
            e.printStackTrace();
            return null;
        }
    }

    private void actualizarTablaUsuarios() {
        try {
            // Obtener la lista de usuarios actualizada desde el controlador
            List<Usuario> usuarios = usuarioController.obtenerUsuarios();

            // Limpiar el modelo de la tabla
            DefaultTableModel model = (DefaultTableModel) TablaUsuarios.getModel();
            model.setRowCount(0);

            // Llenar la tabla con los usuarios obtenidos
            for (Usuario usuario : usuarios) {
                Object[] rowData = {
                    usuario.getIdUsuario(),
                    usuario.getNombre(),
                    usuario.getApellido(),
                    usuario.getCargo(),
                    usuario.getNombreUsuario(),
                    usuario.getContraseña(),
                    usuario.getCorreoElectronico(),
                    usuario.getTelefono(),
                    usuario.getFechaContratacion(),
                    usuario.getSalario()
                };
                model.addRow(rowData);
            }
        } catch (Exception ex) {
            // Manejar cualquier excepción que pueda ocurrir al actualizar la tabla
            ex.printStackTrace();
        }
    }

    private void cargarUsuariosEnTabla() {
        try {
            // Obtener la lista de usuarios desde el controlador
            List<Usuario> usuarios = usuarioController.obtenerUsuarios();

            // Obtener el modelo de la tabla
            DefaultTableModel model = (DefaultTableModel) TablaUsuarios.getModel();

            // Limpiar el modelo de la tabla
            model.setRowCount(0);

            // Agregar cada usuario como una fila en la tabla
            for (Usuario usuario : usuarios) {
                // Agregar registros de depuración para verificar los valores
                System.out.println("ID Usuario: " + usuario.getIdUsuario());
                System.out.println("Nombre: " + usuario.getNombre());
                System.out.println("Apellido: " + usuario.getApellido());
                System.out.println("Cargo: " + usuario.getCargo());
                System.out.println("Nombre de usuario: " + usuario.getNombreUsuario());
                System.out.println("Contraseña: " + usuario.getContraseña());
                System.out.println("Correo Electrónico: " + usuario.getCorreoElectronico());
                System.out.println("Teléfono: " + usuario.getTelefono());
                System.out.println("Fecha de Contratación: " + usuario.getFechaContratacion());
                System.out.println("Salario: " + usuario.getSalario());

                // Agregar los datos a la fila en la tabla
                model.addRow(new Object[]{
                    usuario.getIdUsuario(),
                    usuario.getNombre(),
                    usuario.getApellido(),
                    usuario.getCargo(),
                    usuario.getNombreUsuario(),
                    usuario.getContraseña(),
                    usuario.getCorreoElectronico(),
                    usuario.getTelefono(),
                    usuario.getFechaContratacion(),
                    usuario.getSalario()
                });
            }
        } catch (Exception ex) {
            // Manejar cualquier excepción que pueda ocurrir al cargar los datos
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar los usuarios: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limpiarCamposUsuarios() {
        txtNombreUsuario.setText("");
        txtContraseña.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        cbCargo.setSelectedIndex(0);
        txtFechaContratacion.setText("");
        txtSalario.setText("");
        txtCorreoElectronico.setText("");
        txtTelefono.setText("");

    }

}
